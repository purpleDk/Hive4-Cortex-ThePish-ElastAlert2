version: "3.7"

services:
  elasticsearch:
    image: elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      #- xpack.ml.enabled=false
      - discovery.type=single-node
      #- xpack.monitoring.collection.enabled=true
    ports:
      - "${ES_PORT}:${ES_PORT}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - es-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD","curl", "localhost:9200/_cat/health "]
      timeout: 45s
      interval: 10s
      retries: 10
    
  #-------------------------------------
  kibana:
    image: kibana:${STACK_VERSION}
    container_name: kibana
    restart: always
    environment: 
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "${KIBANA_PORT}:${KIBANA_PORT}"
    depends_on:
      - elasticsearch
  
  #-------------------------------------
  cassandra:
    image: cassandra:${CASSANDRA_VERSION}
    container_name: cassandra
    hostname: cassandra
    restart: unless-stopped
    environment:
      - MAX_HEAP_SIZE=1G
      - HEAP_NEWSIZE=1G
      - CASSANDRA_CLUSTER_NAME=thp
    volumes:
      - './vol/cassandra/data:/var/lib/cassandra/data'
  #-------------------------------------  
  cortex:
    #image: thehiveproject/cortex:latest
    build: ./cortex
    container_name: cortex
    hostname: cortex
    restart: unless-stopped
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - 'JOB_DIRECTORY=/opt/cortex/jobs'
    ports:
      - '9001:9001'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - ./cortex/application.conf:/etc/cortex/application.conf
      - '/tmp:/tmp'
    privileged: true
  
  #-------------------------------------
  thehive:  
    #image: thehiveproject/thehive4:latest
    build: ./thehive
    container_name: thehive
    hostname: thehive
    restart: unless-stopped
    depends_on:
      - cassandra
      - cortex
    ports:
      - '9000:9000'
    volumes:
      - ./thehive/application.conf:/etc/thehive/application.conf
      - ./thehive/data:/opt/thp/thehive/data
      - ./thehive/index:/opt/thp/thehive/index
    command:
      --cortex-port 9001
      --cortex-keys ${CORTEX_KEY}
      

  #-------------------------------------    
  ubuntu:
    image: ubuntu-nginx-beats:1.0
    #build:./ubuntu
    container_name: ubuntu
    hostname: ubuntu_nginx
    restart: always
    depends_on:
      - elasticsearch
      - kibana
    environment:
      - BEATS_STRICT_PERMS=false
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    command: bash -c "./tmp/start.sh"
  
  #-------------------------------------
  ElasticAlert:
    image: jertel/elastalert2:latest
    container_name: ElasticAlert2
    hostname: ElasticAlert2
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
    - type: bind
      source: ./elast-alert/config.yaml
      target: /opt/elastalert/config.yaml
    - type: bind
      source: ./elast-alert/rules
      target: /opt/elastalert/rules 
    restart: always
 #-------------------------------------
  thephish:
    image: emalderson/thephish:latest
    container_name: thephish
    restart: unless-stopped
    depends_on:
      - thehive
      - cortex
    #  - misp
    ports:
      - '8080:8080'
    volumes:
      - ./thephish_conf_files/analyzers_level_conf.json:/root/thephish/analyzers_level_conf.json
      - ./thephish_conf_files/configuration.json:/root/thephish/configuration.json
      - ./thephish_conf_files/whitelist.json:/root/thephish/whitelist.json

volumes:
  es-data:
    driver: local